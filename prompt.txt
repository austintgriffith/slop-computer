Create a starter kit for building simple mobile-optimized HTML5 games or audience engagement apps using Node.js, Express, and Socket.io.

Requirements:
	‚Ä¢	The backend (server.js) should serve an index.html file, track and broadcast the number of connected users, and use chokidar to watch for changes in index.html and trigger a live reload via Socket.io.
	‚Ä¢	It should also print a local QR code in the terminal pointing to the server‚Äôs IP address, using qrcode-terminal.
	‚Ä¢	The frontend (index.html) should be mobile-optimized, with 100px bottom spacing to account for mobile browser UI. It should include:
	‚Ä¢	A ‚Äúloading‚Ä¶‚Äù screen,
	‚Ä¢	A visual loading spinner,
	‚Ä¢	A user count indicator (üë• 1),
	‚Ä¢	A dynamically generated QR code of the current page URL,
	‚Ä¢	Auto-reloading when the server tells it to reload,
	‚Ä¢	Automatic reconnect logic if the socket disconnects,
	‚Ä¢	A periodic ping (socket.emit("ping")) every 30 seconds.
	‚Ä¢	The backend should assign and store user IDs per socket connection and track metadata like IP, user agent, and timestamps.
	‚Ä¢	Ensure the server.js file is written so it can be run via nodemon server.js and restarts automatically.
	‚Ä¢	Add a context.txt that explains that:
	‚Ä¢	The backend is running via nodemon,
	‚Ä¢	Developers should edit but not run server.js manually,
	‚Ä¢	Edits to index.html will trigger auto reloads for connected users,
	‚Ä¢	The frontend should always be mobile-first and avoid zooming on focus.
	‚Ä¢	When building new engagements, always update the backend before the frontend.
